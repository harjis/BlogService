---
apiVersion: platform.confluent.io/v1beta1
kind: Zookeeper
metadata:
  name: zookeeper
  namespace: primary-kafka
spec:
  replicas: 1
  image:
    application: confluentinc/cp-zookeeper:7.4.0
    init: confluentinc/confluent-init-container:2.6.0
  dataVolumeCapacity: 1Gi
  logVolumeCapacity: 1Gi
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: primary-kafka
  namespace: primary-kafka
spec:
  replicas: 1
  image:
    application: confluentinc/cp-server:7.4.0
    init: confluentinc/confluent-init-container:2.6.0
  dataVolumeCapacity: 1Gi
  metricReporter:
    enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: primary-schema-registry
  namespace: primary-kafka
spec:
  replicas: 1
  image:
    application: confluentinc/cp-schema-registry:7.4.0
    init: confluentinc/confluent-init-container:2.6.0
  configOverrides:
    server:
      - kafkastore.topic=_schemas
  dependencies:
    kafka:
      bootstrapEndpoint: primary-kafka:9071
---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: primary-kafka
spec:
  replicas: 1
  image:
    application: confluentinc/cp-enterprise-control-center:7.4.0
    init: confluentinc/confluent-init-container:2.6.0
  dependencies:
    kafka:
      bootstrapEndpoint: primary-kafka:9071
    schemaRegistry:
      url: http://primary-schema-registry.primary-kafka.svc.cluster.local:8081
  dataVolumeCapacity: 1Gi
  podTemplate:
    probe:
      liveness:
        timeoutSeconds: 6000
        failureThreshold: 100
  configOverrides:
    server:
      - confluent.controlcenter.command.topic.replication=1
      - confluent.controlcenter.internal.topics.replication=1
      - confluent.metrics.topic.replication=1
      - confluent.monitoring.interceptor.topic.replication=1
      - confluent.controlcenter.schema.registry.url=http://primary-schema-registry.primary-kafka.svc.cluster.local:8081

---




apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-connect
  namespace: primary-kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-connect
  template:
    metadata:
      labels:
        app: kafka-connect
    spec:
      containers:
        - name: kafka-connect
          image: d0rka/confluent-debezium-outbox-image:0.1.1
          ports:
            - containerPort: 8083
          env:
            - name: CONNECT_BOOTSTRAP_SERVERS
              value: "primary-kafka:9071"
            - name: CONNECT_REST_PORT
              value: "8083"
            - name: CONNECT_REST_ADVERTISED_HOST_NAME
              value: "0.0.0.0"
            - name: CONNECT_GROUP_ID
              value: "kafka-connect"
            - name: CONNECT_CONFIG_STORAGE_TOPIC
              value: "connect-configs"
            - name: CONNECT_OFFSET_STORAGE_TOPIC
              value: "connect-offsets"
            - name: CONNECT_STATUS_STORAGE_TOPIC
              value: "connect-status"
            - name: CONNECT_KEY_CONVERTER
              value: "org.apache.kafka.connect.json.JsonConverter"
            - name: CONNECT_VALUE_CONVERTER
              value: "org.apache.kafka.connect.json.JsonConverter"
            - name: CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE
              value: "false"
            - name: CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE
              value: "false"
            - name: CONNECT_PLUGIN_PATH
              value: "/usr/share/java,/usr/share/confluent-hub-components,/kafka/connect,/kafka/libs"
            - name: CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR
              value: "1"
            - name: CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR
              value: "1"
            - name: CONNECT_STATUS_STORAGE_REPLICATION_FACTOR
              value: "1"